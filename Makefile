default: help

# Always run these rules.
.PHONY: build package localtest localtest-quick clean


# Display make information when no commands are given.
help:
	@echo "Usage: make [options] target"
	@echo ""
	@echo "Targets"
	@echo "    build        Build the perl/latex layer files."
	@echo "    package      Create the AWS Lambda Layer zip archive."
	@echo "    localtest    Run a test with the built package locally."
	@echo "    clean        Remove all files generated by this makefile."
	@echo ""
	@echo "Options"
	@echo "    -B           Force rule to always execute."


# Build the Docker image with perl and texlive installed into /opt for packaging.
# The downloadable files are kept as separate targets so that they won't be downloaded
# if the file has already been downloaded.
build: build/perl-5.30.0.tar.gz build/install-tl-unx.tar.gz
	docker build --force-rm -t echen/lambdalatex:latest .

build/perl-5.30.0.tar.gz:
	mkdir -p build
	cd build && curl -LO https://www.cpan.org/src/5.0/perl-5.30.0.tar.gz

build/install-tl-unx.tar.gz:
	mkdir -p build
	cd build && curl -LO http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz


# Package /opt into a zip archive for AWS Lambda to use as a runtime Layer.
# This zip file should always be built and needs to be deleted first because I'm
# not sure how to delete non-existant files in a previously created zip archive.
package:
	rm -f build/lambdalatex.zip
	docker run --rm -it -v ${PWD}/build:/var/host echen/lambdalatex bash -c "cd /opt; zip -qry -9 /var/host/lambdalatex.zip ."


# Run a quick testcase with a pristine docker environment and our built layer.
# The localtest-quick target speeds up the process by running only the test
# function, assuming that the testing environment is already set up.
localtest: build package build/test-input.zip
	rm -rf /tmp/lambdalatex
	mkdir -p /tmp/lambdalatex/opt
	cp build/lambdalatex.zip /tmp/lambdalatex/opt
	cd /tmp/lambdalatex/opt && unzip -q lambdalatex.zip
	rm /tmp/lambdalatex/opt/lambdalatex.zip
	make localtest-quick
	rm -rf /tmp/lambdalatex

localtest-quick:
	docker run --rm -v ${PWD}:/var/task -v /tmp/lambdalatex/opt:/opt lambci/lambda:python3.7 localtest.localtest

build/test-input.zip: test-input/gull.png test-input/main.tex
	rm -f build/test-input.zip
	mkdir -p build
	cd test-input && zip ../build/test-input.zip *


# Remove all built artifacts.
clean:
#	rm -f build/install-tl-unx.tar.gz
#	rm -f build/lambdalatex.zip
#	rm -f build/main.pdf
#	rm -f build/perl-5.30.0.tar.gz
#	rm -f build/test-input.zip
	rm -rf build
	rm -rf /tmp/lambdalatex
